{
	"catch": "",
	"change": "",
	"complete": "",
	"debug": "",
	"function": "",
	"group": "",
	"inject": "",
	"json": "",
	"link call": "",
	"link in": "",
	"link out": "",
	"range": "",
	"rbe": "",
	"status": "",
	"switch": "",
	"unknown": "",

	"lower-case": "$(NODEREDMCU)/examples/lower-case/manifest.json",

	"audioout": "$(NODEREDMCU)/nodes/audioout/manifest.json",

	"ui_base": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_button": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_chart": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_colour_picker": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_dropdown": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_gauge": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_group": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_numeric": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_slider": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_spacer": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_switch": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_tab": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_template": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_text_input": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_text": "$(NODEREDMCU)/nodes/dashboard/manifest.json",
	"ui_toast": "$(NODEREDMCU)/nodes/dashboard/manifest.json",

	"delay": "$(NODEREDMCU)/nodes/function/delay/manifest.json",
	"random": "$(NODEREDMCU)/nodes/function/random/manifest.json",
	"template": "$(NODEREDMCU)/nodes/function/template/manifest.json",
	"trigger": "$(NODEREDMCU)/nodes/function/trigger/manifest.json",

	"mcu_analog": "$(NODEREDMCU)/nodes/mcu/analog/manifest.json",
	"mcu_clock": "$(NODEREDMCU)/nodes/mcu/clock/manifest.json",
	"mcu_digital_in": "$(NODEREDMCU)/nodes/mcu/digital/manifest.json",
	"mcu_digital_out": "$(NODEREDMCU)/nodes/mcu/digital/manifest.json",
	"mcu_i2c_in": "$(NODEREDMCU)/nodes/mcu/i2c/manifest.json",
	"mcu_i2c_out": "$(NODEREDMCU)/nodes/mcu/i2c/manifest.json",
	"mcu_neopixels": "$(NODEREDMCU)/nodes/mcu/neopixels/manifest.json",
	"mcu_pulse_count": "$(NODEREDMCU)/nodes/mcu/pulsecount/manifest.json",
	"mcu_pulse_width": "$(NODEREDMCU)/nodes/mcu/pulsewidth/manifest.json",
	"mcu_pwm_out": "$(NODEREDMCU)/nodes/mcu/pwm/manifest.json",
	"sensor": "$(NODEREDMCU)/nodes/mcu/sensor/manifest.json",

	"http request": "$(NODEREDMCU)/nodes/network/httprequest/manifest.json",
	"http in": "$(NODEREDMCU)/nodes/network/httpserver/manifest.json",
	"http response": "$(NODEREDMCU)/nodes/network/httpserver/manifest.json",
	"mqtt-broker": "$(NODEREDMCU)/nodes/network/mqtt/manifest.json",
	"mqtt in": "$(NODEREDMCU)/nodes/network/mqtt/manifest.json",
	"mqtt out": "$(NODEREDMCU)/nodes/network/mqtt/manifest.json",
	"tcp in": "$(NODEREDMCU)/nodes/network/tcp/manifest.json",
	"tcp out": "$(NODEREDMCU)/nodes/network/tcp/manifest.json",
	"tls-config": "$(NODEREDMCU)/nodes/network/tls-config/manifest.json",
	"udp in": "$(NODEREDMCU)/nodes/network/udp/manifest.json",
	"udp out": "$(NODEREDMCU)/nodes/network/udp/manifest.json",
	"websocket-client": "$(NODEREDMCU)/nodes/network/websocketnodes/manifest.json",
	"websocket-listener": "$(NODEREDMCU)/nodes/network/websocketnodes/manifest.json",
	"websocket in": "$(NODEREDMCU)/nodes/network/websocketnodes/manifest.json",
	"websocket out": "$(NODEREDMCU)/nodes/network/websocketnodes/manifest.json",

	"csv": "$(NODEREDMCU)/nodes/parser/csv/manifest.json",

	"rpi-ds18b20": "$(NODEREDMCU)/nodes/rpi/rpi-ds18b20/manifest.json",
	"rpi-gpio in": "$(NODEREDMCU)/nodes/rpi/rpi-gpio/manifest.json",
	"rpi-gpio out": "$(NODEREDMCU)/nodes/rpi/rpi-gpio/manifest.json",
	"rpi-neopixels": "$(NODEREDMCU)/nodes/rpi/rpi-neopixels/manifest.json",

	"batch": "$(NODEREDMCU)/nodes/sequence/batch/manifest.json",
	"join": "$(NODEREDMCU)/nodes/sequence/join/manifest.json",
	"sort": "$(NODEREDMCU)/nodes/sequence/sort/manifest.json",
	"split": "$(NODEREDMCU)/nodes/sequence/split/manifest.json",

	"file": "$(NODEREDMCU)/nodes/storage/file/manifest.json",
	"file in": "$(NODEREDMCU)/nodes/storage/file/manifest.json",

	"openweathermap": "$(NODEREDMCU)/nodes/weather/openweathermap/manifest.json",
	"openweathermap in": "$(NODEREDMCU)/nodes/weather/openweathermap/manifest.json",
	
	"mcu_code": ""
}
